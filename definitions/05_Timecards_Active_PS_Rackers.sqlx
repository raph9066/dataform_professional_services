config { 
    type: "view",
    tags: "daily"
 }

with racker_rooster as (SELECT DISTINCT *
FROM `rax-landing.workday_ods.racker_roster`
WHERE  
  cost_center_id IN ('5727', '5209', '5023', '5535', '5430', '5740','6708','5711')
  AND management_chain_level_03 IN ('Stacey Portat', 'Marc Hadler')
  AND workers_manager NOT IN ('Srini Koushik', 'Jake Thielen') 
  AND hire_date <= CURRENT_DATE()
  AND report_effective_date = (
      SELECT MAX(report_effective_date) 
      FROM `rax-landing.workday_ods.racker_roster`
  )
  --AND cost_center_id != 5711  -- Exclude Paul Cocks' cost center
  

UNION ALL

-- Query to specifically include Paul Cocks
SELECT DISTINCT *
FROM `rax-landing.workday_ods.racker_roster`
WHERE  
  preferred_name = 'Paul Cocks'
  AND hire_date <= CURRENT_DATE()
  AND report_effective_date = (
      SELECT MAX(report_effective_date) 
      FROM `rax-landing.workday_ods.racker_roster`
  )
 ) 
 ,
 fixed_qcontact AS (
  SELECT * EXCEPT(email),
    CASE 
      WHEN namex = 'Sajid Hussain' AND email = "00000@rackspace.com" THEN "sajid.hussain@rackspace.com"
      WHEN email = "hatemahmed.mostafa@rackspace.com" THEN "hatem.mostafa@rackspace.com"  
      WHEN email = "kiranahamedmusthak.ali@rackspace.com" THEN "Kiran.ahamed@rackspace.com"
      ELSE email 
    END AS email 
  FROM `rax-landing.salesforce_ods.qcontact`
  WHERE delete_flag = "N"
),

final_query as
(
  SELECT 
  Project.pse__project_id  AS Project,
  Project.namex AS `PS Project: Project Name`,
  Project.pse__project_id AS `Project ID`,
  a.namex AS Assignment,
  qc.namex AS Resource,
  
  td.pse__date AS Date,
  th.namex as timecard_header_id,
  tc.id as timecard_id,
  tc.namex as `Timecard ID`,
  CASE 
    WHEN td.pse__day_of_week = 'Monday' THEN CAST(tc.pse__monday_hours AS NUMERIC)
    WHEN td.pse__day_of_week = 'Tuesday' THEN CAST(tc.pse__tuesday_hours AS NUMERIC)
    WHEN td.pse__day_of_week = 'Wednesday' THEN CAST(tc.pse__wednesday_hours AS NUMERIC)
    WHEN td.pse__day_of_week = 'Thursday' THEN CAST(tc.pse__thursday_hours AS NUMERIC)
    WHEN td.pse__day_of_week = 'Friday' THEN CAST(tc.pse__friday_hours AS NUMERIC)
    WHEN td.pse__day_of_week = 'Saturday' THEN CAST(tc.pse__saturday_hours AS NUMERIC)
    WHEN td.pse__day_of_week = 'Sunday' THEN CAST(tc.pse__sunday_hours AS NUMERIC)
    ELSE 0
  END AS Hour,

  --tc.pse__total_hours AS Hours,
  ---tc.pse__total_billable_amount AS Total_Billable_Amount_Converted,
  tc.pse__timecard_notes AS Daily_Notes,
  tc.pse__external_resource AS External_Resource,
  tc.pse__status AS Status,
  tc.pse__billable AS Billable,
  tc.pse__exclude_from_billing AS Exclude_from_Billing,
  qc2.namex AS Resource_Manager,  
  qc.pse__resource_role AS Resource_Role, 
  cast(tc.pse__end_date as date) AS End_Date,      
 safe_cast(tc.pse__total_billable_amount as numeric) * Ifnull(1 / cr.conversionrate, 1) AS Total_Billable_Amount_Converted,
 safe_cast(th.pse__bill_rate as numeric) * Ifnull(1 / cr.conversionrate, 1) as Bill_Rate_Converted,
  m.namex AS Milestone,
  qc3.namex AS Project_Manager
FROM 
  `rax-landing.salesforce_ods.qpse__timecard` tc
left join `rax-landing.salesforce_ods.qpse__timecard_header` th
  on tc.pse__timecard_header = th.id
LEFT JOIN 
  `rax-landing.salesforce_ods.qpse__time_date` td
  ON tc.pse__timecard_header = td.pse__timecard
  JOIN 
    `rax-landing.salesforce_ods.qpse__proj` AS project
ON 
   tc.pse__project = project.id

   left join `rax-landing.salesforce_ods.qpse__assignment` as a
on tc.pse__assignment = a.id

left join `rax-landing.salesforce_ods.qpse__milestone` as m
on tc.pse__milestone = m.id

left join fixed_qcontact as qc
on tc.pse__resource = qc.id

left join fixed_qcontact as qc2
on qc.reportstoid = qc2.id

left join fixed_qcontact as qc3
on project.pse__project_manager  = qc3.id

 LEFT JOIN `rax-landing.salesforce_ods.qdatedconversionrate` AS cr ON 1 = 1
  AND cr.delete_flag = 'N'
  AND cr.isocode = tc.currencyisocode
  AND cr.nextstartdate > '3000-01-01'

left join  racker_rooster on lower(qc.email) = lower(racker_rooster.work_email)
where 1=1

and lower(qc.email) = lower(racker_rooster.work_email)

---and Project.namex  = 'SDAIA_P-Cloud Project - Phase 2 : PSO-14564'
and safe_cast(tc.pse__total_hours as numeric) > 0
----and qc.namex = 'Sajid Hussain'
---and racker_rooster.work_email is null
---and racker_rooster.sso ='jaku4994'
and tc.pse__end_date >= '2023-12-31'
and safe_cast(th.isdeleted as bool) = FALSE
and safe_cast(tc.isdeleted as bool) = FALSE
AND safe_cast(td.isdeleted as bool) = FALSE

----and tc.id ='a7G8Z000000VzNZUA0'

)
select *, Hour*Bill_Rate_Converted as Billable_Amount,
EXTRACT(DAYOFWEEK FROM End_Date) AS day_of_week_num,
-- Get the following Saturday
DATE_ADD(End_Date, INTERVAL 
  CASE EXTRACT(DAYOFWEEK FROM End_Date)
    WHEN 1 THEN 6  -- Sunday: add 6 days
    WHEN 2 THEN 5  -- Monday: add 5 days  
    WHEN 3 THEN 4  -- Tuesday: add 4 days
    WHEN 4 THEN 3  -- Wednesday: add 3 days
    WHEN 5 THEN 2  -- Thursday: add 2 days
    WHEN 6 THEN 1  -- Friday: add 1 day
    WHEN 7 THEN 0  -- Saturday: add 7 days (next Saturday)
  END DAY) AS End_Date_Mod
from final_query

where Hour > 0
